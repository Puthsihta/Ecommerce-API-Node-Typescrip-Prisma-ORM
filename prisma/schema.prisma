// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  name String?
  email String? @unique
  phone String @unique
  password String?
  role String @default("USER")
  otp_code String?
  image_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  addresss Address[]
  oreders Order[]
  payment_method PaymentMethod[]
  shopo Shop[]
  order_review OrderReview[]
  recently_order RecentlyOrder[]
  
  @@fulltext([name, email, phone])
  @@map("users")
}
model Driver{
  id Int @id @default(autoincrement())
  name String?
  email String? @unique
  phone String @unique
  password String?
  image_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  @@fulltext([name, email, phone])
  @@map("drivers")
}

model Address{
  id Int @id @default(autoincrement())
  name String
  address String
  latitude String
  longitude String
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@fulltext([name, address])
  @@map("addresses")
  order Order[]
  shop Shop[]
  recently_order RecentlyOrder[]
}
model Category{
  id Int @id @default(autoincrement())
  name String
  description String? @db.Text
  image_url String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sub_category SubCategory[]
  product Product[]

  @@fulltext([name, description])
  @@map("categories")
}
model SubCategory{
  id Int @id @default(autoincrement())
  name String
  description String? @db.Text
  image_url String?
  cate_id Int?
  category Category? @relation(fields: [cate_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product Product[]

  @@fulltext([name, description])
  @@map("sub_categories")
}
model Product{
  id Int @id @default(autoincrement())
  cate_id Int
  category Category @relation(fields: [cate_id], references: [id])
  sub_cate_id Int?
  sub_category SubCategory? @relation(fields: [sub_cate_id], references: [id])
  shop_id Int
  shop Shop @relation(fields: [shop_id], references: [id])
  name String
  description String? @db.Text
  price Decimal
  image_url String?
  is_favorite Boolean? @default(false)
  discount Int?
  follow_shop_discount Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  orders OrderProduct[]

  @@fulltext([name, description])
  @@map("products")
}
model Shop{
  id Int @id @default(autoincrement())
  name String
  description String? @db.Text
  phone String?
  email String?
  address_id Int
  user_id Int
  is_active Boolean @default(true)
  address Address @relation(fields: [address_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
  cover_image String?
  logo_image String?
  is_favorite Boolean? @default(false)
  is_new Boolean? @default(true)
  is_promotion Boolean? @default(false)
  
  open_time Json?
  open_week Json?
  freight Json?
  merchant_type String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product Product[]
  order_review OrderReview[]
  promotion PromotionShop[]

  @@fulltext([name])
  @@map("shops")
}
model PromotionShop{
  id Int @id @default(autoincrement())
  lable String?
  promotion Int?
  start_date DateTime?
  end_date DateTime?
  shop_id Int
  shop Shop @relation(fields: [shop_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("promotion_shops")
}
model Order{
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  total Decimal?
  sub_total Decimal?
  total_discount Decimal?
  total_item Int?
  invoice_no String @default("0001")
  remarks String? 
  address_id Int
  address Address @relation(fields: [address_id], references: [id])
  payment_id Int
  payment_method PaymentMethod @relation(fields: [payment_id], references: [id])
  status Int @default(1)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product_data OrderProduct[]
  events OrderEvent[]
  order_review OrderReview[]
  recently_order RecentlyOrder[]

  @@fulltext([invoice_no])
  @@map("orders")
}

model OrderProduct{
  id Int @id @default(autoincrement())
  order_id Int
  order Order @relation(fields: [order_id], references: [id])
  product_id Int
  product Product @relation(fields: [product_id], references: [id])
  quantity Int @default(1)
  sub_total Decimal?
  sub_total_discount Decimal?
  noted String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("order_products")
}

model OrderEvent{
  id Int @id @default(autoincrement())
  order_id Int
  order Order @relation(fields: [order_id], references: [id])
  status Int @default(1)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("order_events")
}
model RecentlyOrder{
  id Int @id @default(autoincrement())
  order_id Int
  order Order @relation(fields: [order_id], references: [id])
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  address_id Int
  address Address @relation(fields: [address_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("recently_order")
}
model OrderReview{
  id Int @id @default(autoincrement())
  order_id Int
  order Order @relation(fields: [order_id], references: [id])
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  shop_id Int
  shop Shop @relation(fields: [shop_id], references: [id])
  order_rating Int
  shop_rating Int
  driver_rating Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  @@map("order_reviews")
}
model PaymentMethod{
  id Int @id @default(autoincrement())
  name String
  description String @db.Text
  type String
  image_url String?
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  order Order[]

  @@fulltext([name, description])
  @@map("payment_methods")
}
model Setting{
  id Int @id @default(autoincrement())
  title String
  type String @default("contact_us")
  content String? @db.LongText()
  phone String?
  email String?
  web String?
  address String?
  latitude String?
  longitude String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("settings")
}